description: |-
  Copyright 2023 <UCLA Mobility Lab>
  Author: XH
  Content: This is the scenario testing configuration file for single vehicle perception/localization/behavior/control
           testing in high speed in the customized 2lanefree simple version.
world:
  weather:
    sun_altitude_angle: 90 # 90 is the midday and -90 is the midnight
    cloudiness: 0 # 0 is the clean sky and 100 is the thickest cloud
    precipitation: 0 # rain, 100 is the heaviest rain
    precipitation_deposits: 0 # Determines the creation of puddles. Values range from 0 to 100, being 0 none at all and 100 a road completely capped with water.
    wind_intensity: 0 # it will influence the rain
    fog_density: 0 # fog thickness, 100 is the largest
    fog_distance: 0  # Fog start distance. Values range from 0 to infinite.
    fog_falloff: 0 # Density of the fog (as in specific mass) from 0 to infinity. The bigger the value, the more dense and heavy it will be, and the fog will reach smaller heights
    wetness: 0


# First define the basic parameters of the vehicles
vehicle_base:
  sensing:
    perception:
      camera: # turn off camera
        visualize: 0
        num: 0 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
        # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
        positions: []
      lidar: # turn off lidar
        visualize: false

  map_manager: # turn off BEV map
    visualize: false # whether to visualize the rasteraization map
    activate: false # whether activate the map manager
        
  behavior:
    max_speed: 20 # maximum speed, km/h
    #tailgate_speed: 100 # when a vehicles needs to be close to another vehicle asap
    #speed_lim_dist: 3 # max_speed - speed_lim_dist = target speed
    #speed_decrease: 10 # used in car following mode to decrease speed for distance keeping
    #safety_time: 4 # ttc safety thresholding for decreasing speed
    #emergency_param: 0.4 # used to identify whether a emergency stop needed
    ignore_traffic_light: false # whether to ignore traffic light
    #overtake_allowed: false # whether overtake allowed, typically false for platoon leader
    collision_time_ahead: 2.0 # used for collision checking
    #overtake_counter_recover: 35 # the vehicle can not do another overtake during next certain steps
    sample_resolution: 4.5 # the unit distance between two adjacent waypoints in meter
    #local_planner:  # trajectory planning related
    #  buffer_size: 12 # waypoint buffer size
    #  trajectory_update_freq: 15 # used to control trajectory points updating frequency
    #  waypoint_update_freq: 9 # used to control waypoint updating frequency
    #  min_dist: 3 # used to pop out the waypoints too close to current location
    #  trajectory_dt: 0.20 # for every dt seconds, we sample a trajectory point from the trajectory path as next goal state
    #  debug: false # whether to draw future/history waypoints
    #  debug_trajectory: false # whether to draw the trajectory points and path

  #controller:
  #  type: pid_controller # this has to be exactly the same name as the controller py file
  #  args:
  #    lat:
  #      k_p: 0.75
  #      k_d: 0.02
  #      k_i: 0.4
  #    lon:
  #      k_p: 0.37
  #      k_d: 0.024
  #      k_i: 0.032
  #    dynamic: false # whether use dynamic pid setting
  #    dt: ${world.fixed_delta_seconds} # this should be equal to your simulation time-step
  #    max_brake: 1.0 
  #    max_throttle: 1.0
  #    max_steering: 0.3


# define the background traffic control by carla --> no background traffic for this scenario
# carla_traffic_manager:
#   random: true # whether to random select vehicles' color and model
#   vehicle_list: ~  # a number or a list
#   # Used only when vehicle_list is a number.
#   # x_min, x_max, y_min, y_max, x_step, y_step, veh_num
#   range:
#     - [ 2, 10, 0, 200, 3.5, 25, 30]

# define scenario. In this scenario, a 4-vehicle platoon already exists.
scenario:
  single_cav_list: # this is for merging vehicle or single cav without v2x
    - name: UCLA-OPENCDA
      spawn_position: [34, 250, 1, 0, -85, 0] # x, y, z, roll, yaw, pitch
      destination: [60.5, 38.7, 0]
      v2x:
        communication_range: 45
      behavior:
        local_planner:
          debug_trajectory: true
          debug: true
